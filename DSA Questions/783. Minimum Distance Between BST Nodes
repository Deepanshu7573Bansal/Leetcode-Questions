/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int minDiffInBST(TreeNode* root) {
        if(root==NULL){
            return 0;
        }

        vector<int>v;
        vector<int>v1;
        queue<TreeNode*>q;
        q.push(root);
        while(!q.empty()){
            struct TreeNode* temp=q.front();
            q.pop();
            if(temp!=NULL){
                v.push_back(temp->val);

                if(temp->left!=NULL){
                    q.push(temp->left);
                }
                if(temp->right!=NULL){
                    q.push(temp->right);
                }
            }
        }

        sort(v.begin(),v.end(),greater<int>());
        for(int i=0;i<v.size();i++){
            for(int j=i+1;j<v.size();j++){
                if((v[i]-v[j])>0){
                    v1.push_back((v[i]-v[j]));
                }
            }
        }

        sort(v1.begin(),v1.end());
        return v1[0];
    }
};
