/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        struct ListNode* temp=head;
        vector<int>v;
        vector<int>v1;
        int index=0;

        if(head==NULL){
            return head;
        }else{
            while(temp!=NULL){
                v.push_back(temp->val);
                index++;
                if(k==index){
                    for(int i=v.size()-1;i>=0;i--){
                        v1.push_back(v[i]);
                    }
                    
                    index=0;
                    while(!v.empty()){
                        v.pop_back();
                    }
                }
                temp=temp->next;
            }
            if(v.size()!=0){
                for(int i=0;i<v.size();i++){
                    v1.push_back(v[i]);
                }
            }

            temp=head;
            for(int i=0;i<v1.size();i++){
                temp->val=v1[i];
                if(i==v1.size()-1){
                    temp->next=NULL;
                    return head;
                }
                temp=temp->next;
            }
        }
        return head;
    }
};
